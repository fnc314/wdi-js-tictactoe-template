// Generated by CoffeeScript 1.7.1
var ticTacToe,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

ticTacToe = angular.module("ticTacToeApp", []);

ticTacToe.controller("gameCtrl", [
  "$scope", function($scope) {
    $scope.turn = 0;
    $scope.tiles = [
      {
        id: 0,
        name: "tile0",
        letter: ""
      }, {
        id: 1,
        name: "tile1",
        letter: ""
      }, {
        id: 2,
        name: "tile2",
        letter: ""
      }, {
        id: 3,
        name: "tile3",
        letter: ""
      }, {
        id: 4,
        name: "tile4",
        letter: ""
      }, {
        id: 5,
        name: "tile5",
        letter: ""
      }, {
        id: 6,
        name: "tile6",
        letter: ""
      }, {
        id: 7,
        name: "tile7",
        letter: ""
      }, {
        id: 8,
        name: "tile8",
        letter: ""
      }
    ];
    $scope.winCombos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];
    $scope.players = [
      {
        name: 'Ernie',
        marker: 'X',
        imgurl: 'img/ernie.jpg',
        indicator: 0,
        moves: []
      }, {
        name: 'Bert',
        marker: 'O',
        imgurl: 'img/bert.jpg',
        indicator: 1,
        moves: []
      }
    ];
    $scope.intersection = function(array1, array2) {
      var value, _i, _len, _ref, _results;
      if (array1.length > array2.length) {
        _ref = [array2, array1], array1 = _ref[0], array2 = _ref[1];
      }
      _results = [];
      for (_i = 0, _len = array1.length; _i < _len; _i++) {
        value = array1[_i];
        if (__indexOf.call(array2, value) >= 0) {
          _results.push(value);
        }
      }
      return _results;
    };
    $scope.isWinner = function(array) {
      array = array.sort();
      if ($scope.intersection(array, $scope.winCombos)) {
        return console.log("true");
      } else {
        return console.log("false");
      }
    };
    $scope.currentPlayer = function() {
      return $scope.players[$scope.turn];
    };
    return $scope.selected = function(index) {
      var player, tile, _i, _j, _len, _len1, _ref, _ref1;
      _ref = $scope.players;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        player = _ref[_i];
        _ref1 = $scope.tiles;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          tile = _ref1[_j];
          if (tile.id === index && tile.letter === "" && player.indicator === $scope.turn) {
            tile.letter = player.marker;
            player.moves.push(index);
            player.moves = player.moves.sort();
            console.log(player.moves);
            $scope.turn++;
            $scope.turn = $scope.turn % 2;
          }
        }
      }
    };
  }
]);
